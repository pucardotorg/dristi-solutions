openapi: "3.0.0"

info:
  title: API specs for Order
  description:
    Order API paths and entity is defined in this file.
  version: "0.2.0"

servers:
  - url: ""

tags:
  - name: Order
    description: APIs for managing Orders related to a Case

paths:
  /order/v1/create:
    post:
      tags:
        - Order
      summary: create new order
      requestBody:
        description: Details for the new order + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      responses:
        "201":
          description: ResponseInfo with order(s) updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponse'
        "400":
          description: order(s) creation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: orderRequest

  /order/v1/update:
    post:
      tags:
        - Order
      summary: update order requests.
      requestBody:
        description: Details for the update order(s) + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      responses:
        "201":
          description: ResponseInfo with order(s) updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponse'
        "400":
          description: order(s) update failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: orderRequest

  /order/v1/search:
    post:
      tags:
        - Order
      summary: search for orders
      description: |
        search order(s) based on different parameters
      requestBody:
        description: Details for the search order(s) + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderSearchRequest'
        required: true
      responses:
        "200":
          description: ResponseInfo with order list
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderListResponse'
        "400":
          description: failed to find order(s)
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse'

  /order/v1/exists:
    post:
      tags:
        - Order
      summary: order exits or not
      requestBody:
        description: check if the order(S) exists
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderExistsRequest'
        required: true
      responses:
        "201":
          description: ResponseInfo with order(s) updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderExistsResponse'
        "400":
          description: failed to find Order
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse'

  /order/v2/add-item:
    post:
      summary: Append new item/order to an existing composite order
      requestBody:
        description: Details for the new item/order + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      responses:
        "201":
          description: ResponseInfo with order updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponse'
        "400":
          description: item/order update failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse'

  /order/v2/remove-item:
    post:
      summary: Remove an item/order type from a composite order
      requestBody:
        description: Details for the item/order to be removed + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RemoveItemRequest'
        required: true
      responses:
        "200":
          description: item/order removed from composite order
        "400":
          description: order update failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ErrorResponse'

components:
  schemas:
    OrderSearchRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        criteria:
          $ref: '#/components/schemas/OrderCriteria'
        pagination:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/Pagination'
    OrderRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        order:
          $ref: '#/components/schemas/Order'

    RemoveItemRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        order:
          $ref: '#/components/schemas/RemoveItem'

    RemoveItem:
      type: object
      properties:
        tenantId:
          type: string
        courtId:
          type: string
          description: optional field. This can help narrow down the search of orders to withing a specific court
        orderNumber:
          type: string
        itemID:
          type: string
          description: ID of the item to be removed. Cannot use order type as there can be multiple items of the same type

    OrderResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        order:
          $ref: '#/components/schemas/Order'

    OrderListResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        TotalCount:
          type: integer
        list:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        pagination:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/Pagination'

    OrderExistsRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        orderList:
          type: array
          items:
            $ref: '#/components/schemas/OrderExists'

    OrderExistsResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        orderList:
          type: array
          items:
            $ref: '#/components/schemas/OrderExists'

    OrderCriteria:
      type: object
      description: can send in any one of the values. If multiple parameters are passed, then it will be a logical AND search
      properties:
        filingNumber:
          type: string
        cnrNumber:
          type: string
        tenantId:
          type: string
        id:
          type: string
        orderNumber:
          type: string
        orderType:
          type: string  
        applicationNumber:
          type: string
        status:
          type: string
        orderCategory:
          type: string

    OrderExists:
      type: object
      description: can send in any one of the values and Exists value will be populated with true or false. If multiple paramters are passed, then it will be a logical AND search
      properties:
        orderId:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
        filingNumber:
          type: string
        cnrNumber:
          type: string
        applicationNumber:
          type: string
        orderNumber:
          type: string
        exists:
          type: boolean

    IssuedBy:
      type: object
      properties:
        benchID:
          type: string
        judgeID:
          type: array
          items:
            type: string
            format: uuid
            minLength: 36
            maxLength: 36
        courtID:
          type: string
          description: code of the court
          example: KLKM52

    Order:
      description: An order is created as an outcome of an hearing or based on an application. Order will contain a set of tasks
      type: object
      required: [ tenantId, createdDate, orderType, status, isActive ]
      properties:
        id:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
          description: auto generated primary for internal reference
          readOnly: true
        tenantId:
          type: string
          description: This is tenantId of the case
        filingNumber:
          type: string
          description: the associated case
        cnrNumber:
          type: string
          description: The CNR number of the associated case. helps in faster search
        applicationNumber:
          type: array
          items:
            type: string
            description: application number the order is based on. Could be null if not based on any application
        hearingNumber:
          type: string
          description: in case the order is part of a hearing. if not, this will be set to null
        orderNumber:
          type: string
          minLength: 24
          maxLength: 256
          description: Order date and Case Name For example it will be Order number 1 for Rajpal et all vs State of Kerala
        linkedOrderNumber:
          type: string
          minLength: 24
          maxLength: 256
          description: Linked orderNumber for reissue of orders (for summons and warrants et)
        createdDate:
          type: integer
          format: int64
          description: the date on which the order was created. Can be treated as the start date also
        issuedBy:
          $ref: '#/components/schemas/IssuedBy'
        orderType:
          type: string
          description: Master Data ID from OrderType master. Used only if orderCategory is NOT composite.
        orderCategory:
          type: string
          description: Master data ID. Possible values - Intermediate, Judgement, Composite
          example: Intermediate, Judgement, Composite
        orderDetails:
          type: object
          description: schema to define fields that are required for the creation of ORDER PDFs. it will be used to validate the fields before creating the PDF
        compositeItems:
          type: array
          description: List of order types and schema for composite orders. Required only if orderCategory = "composite".
          nullable: true
          items:
            $ref: '#/components/schemas/CompositeItem'
        status:
          type: string
          description: workflow status
        comments:
          type: string
          description: any additional comments with regards the order, the judge may want to write
        isActive:
          type: boolean
          description: to handle soft delete
        statuteSection:
          $ref: './case-api-0.1.0.yaml#/components/schemas/StatuteSection'
        documents:
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/Document'
        additionalDetails:
          type: object
          description: This field is meant to hold any extra information that we want to store.
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
        workflow:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/common-contract-update/Common%20Services/common-contract.yaml#/components/schemas/Workflow'

    CompositeItem:
      type: object
      properties:
        id:
          type: string
          description: identifier for this item, which will be useful for deletion of item
        orderType:
          type: string
          description: order type for an individual item in composite orders. this is the same as is used for an individual order
        orderSchema:
          type: object
          description: schema to define the fields that are required for creation of ORDER PDFs. it will be used to validate the fields before creating the PDF
