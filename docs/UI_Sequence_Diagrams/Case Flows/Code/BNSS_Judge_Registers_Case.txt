@startuml
title "Judge registers a Case with/without Delay Condonation"
autonumber
actor Judge as J

participant HomeScreenUI as H
participant PendingTasksUI as I 
participant ViewCaseUI as CI
participant OrderUI as OI

box DRISTI Services
participant CaseSvc #gold
participant HearingSvc #gold
participant OrderSvc #gold
participant TaskSvc #gold
end box

participant ESign #orange

box DIGIT Services
participant Workflow #lightgreen
end box

J->I: View Inbox with cases pending registration
J->CI: Click on case
CI->CaseSvc++: Search for case by\n case number
return Case
CI->CI: Display case details
alt "Register Case"
J -> CI: Register case
CI->CaseSvc++: Call update with workflow action
CaseSvc->CaseSvc: Generate CNR,CMP
CaseSvc->Workflow++: Update workflow to "registered" status
return workflow
CaseSvc->CI: Return updated case payload

alt Case with Delay Condonation
CI-> OI: Show the order for hearing
note right of OI: Judge will select the type of Order and fill the order details
J->OI: Click on "Issue order"
OI->OrderSvc++:Create order of type selected by Judge
return Order
else Case without Delay Condonation
CI-> OI: Show the order for admission hearing
note right of OI: Judge fills in the order details
J->OI: Click on "Issue order"
OI->OrderSvc++:Create order of type "Schedule Admission Hearing"
return Order
end

OI->ESign++:Sign the order
return Signed order doc
OI->OrderSvc++: Update order with signed doc \nand update workflow state to "PUBLISHED"
return order
OI->HearingSvc++: Hearing create with workflow action \n("SCHEDULED") and attach orderID
return "Hearing date"

alt Case with Delay Condonation
J->OI: Show the order of type 'Notice for BNSS & Delay Condonation'
else Case without Delay Condonation
J->OI: Show the order of type 'Notice for BNSS'
end

note right of OI: Judge fills in the order details
J ->OI: Click on "Issue order"
OI->OrderSvc++:Create order (follow summons flow)
return order
OI->ESign++:Sign the order
return Signed order doc
OI->OrderSvc++: Update order with signed doc \nand update workflow state to "PUBLISHED"
return order
OI->TaskSvc++: Create task type notice & attach workflow (follow summons flow)
return task
OI->CaseSvc++: Update case workflow "PENDING_RESPONSE"
return case
OI->H: Redirect to home page
else
J -> CI: Send back
CI->H: Redirect to home page
end
@enduml