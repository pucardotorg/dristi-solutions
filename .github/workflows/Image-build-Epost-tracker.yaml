name: Epost Tracker Image Build workflow
on:
  push:
    branches:
      - develop
      - uat-v0.3
      - dpg-qa-deployment
    paths:
      - 'backend/epost-tracker/**'
  pull_request:
    branches:
      - develop
      - uat-v0.3
      - dpg-qa-deployment
    paths:
      - 'backend/epost-tracker/**'
  workflow_dispatch:
  workflow_call:
permissions:
  security-events: write
  contents: read
jobs:
  docker_image-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Dependency check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: 'epost-tracker'
          path: 'backend/epost-tracker'
          format: 'SARIF'
      - name: Upload SARIF result to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/dependency-check-report.sarif
        if: always()
      - name: Build and analyze for Epost Tracker
        env:
          GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B -f backend/epost-tracker/pom.xml package org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=solutions_epost_tracker -Dsonar.organization=solutions -Dsonar.host.url=https://sonarcloud.io/ -Dsonar.qualitygate.wait=true

      # Login to Azure Container Registry
      - name: Login to Azure Container Registry
        if: (github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/uat-v0.3' || github.ref == 'refs/heads/dpg-qa-deployment')) || github.event_name == 'workflow_dispatch'
        run: docker login -u pucarsolutionsdev -p ${{ secrets.ACR_PASSWORD }} pucarsolutionsdev.azurecr.io

      - name: Git commit_hash for service
        run: |
          commit_hash=$(git log -1 --pretty=format:%H -- backend/epost-tracker)
          echo "commit_hash=$commit_hash" >> $GITHUB_ENV

      - name: Build and Push Docker image for Epost Tracker
        if: (github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/uat-v0.3' || github.ref == 'refs/heads/dpg-qa-deployment')) || github.event_name == 'workflow_dispatch'
        run: |
          docker build --build-arg WORK_DIR="backend/epost-tracker" -t pucarsolutionsdev.azurecr.io/epost-tracker:v1.0.0-${{ env.commit_hash }} -f build/maven/Dockerfile .
          docker push pucarsolutionsdev.azurecr.io/epost-tracker:v1.0.0-${{ env.commit_hash }}

      - name: Build and Push Docker image for Epost Tracker DB
        if: (github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/uat-v0.3' || github.ref == 'refs/heads/dpg-qa-deployment')) || github.event_name == 'workflow_dispatch'
        run: |
          docker build  -t pucarsolutionsdev.azurecr.io/epost-tracker-db:v1.0.0-${{ env.commit_hash }} -f  Dockerfile .
          docker push pucarsolutionsdev.azurecr.io/epost-tracker-db:v1.0.0-${{ env.commit_hash }}
        working-directory: backend/epost-tracker/src/main/resources/db

  Workflow_Trigger:
    if: (github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/uat-v0.3' || github.ref == 'refs/heads/dpg-qa-deployment')) || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: docker_image-build
    steps:
      - name: Set Workflow File Based on Branch
        id: set_workflow
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo "WORKFLOW_FILE=solutions-dev.yaml" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/uat-v0.3" ]; then
            echo "WORKFLOW_FILE=solutions-qa.yaml" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/dpg-qa-deployment" ]; then
            echo "WORKFLOW_FILE=solutions-dpg-qa.yaml" >> $GITHUB_ENV
          fi

      - name: Trigger Deployment Pipeline
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GHUB_TOKEN }}" \
          https://api.github.com/repos/pucardotorg/pucar-Devops/actions/workflows/${{ env.WORKFLOW_FILE }}/dispatches \
          -d '{"ref":"Solutions-Pipeline"}'